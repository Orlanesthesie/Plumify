{% extends 'base.html.twig' %}

{% block title %}
    {{ book.title }}
{% endblock %}

{% block body %}
    <div id="error-message" class="alert alert-danger mt-2" style="display: none;"></div>

        <div class="container mt-2">
            <div class="row">
                <!-- Détails du livre -->
                <div class="col-md-12">
                    <div class="card mb-4 p-2 shadow-sm rounded rounded-5" style="background-color: #E9D7FF;">
                        <div class="row no-gutters">
                            <div class="col-md-3" style="position: relative;">
                                <a href="javascript:history.back()" class="show" title="back" style="text-decoration: none;"><i class="fa-solid fa-arrow-left"></i></a>
                                <div class="book-cover-container">
                                
                                    <img class="book-cover" src="{{ asset('/assets/images/books/' ~ book.coverImage) }}" 
                                        class="img-fluid p-4" 
                                        alt="{{ book.title }}" >
                                </div>
                            </div>
                            <div class="col-md-9">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <p class="text-muted mb-3">{{ book.author.firstname }} {{ book.author.lastname }}</p>
                                            <h2 class="card-title fs-2 quando mb-3">{{ book.title }}</h2>
                                            <p> Available: 
                                            {{ book.available ? '<i class="fas fa-check-circle" style="color: green;"></i>' : '<i class="fas fa-times-circle" style="color: red;"></i>'|raw }}
                                            </p>
                                        </div>

                                        <!-- Bouton like -->
                                        <div>
                                            <button data-book-id="{{ book.id }}" class="btn btn-outline-dark" title="like">
                                                <i class="fa-solid fa-heart"></i>
                                            </button>
                                            <span id="likes-count" class="ms-2">{{ book.getLikedByUsers()|length }}</span>
                                        </div>
                                    </div>
                                    <p class="card-text">{{ book.publicationYear }}</p>
                                    <p>{{ book.summary }}</p>
                                    <div class="mb-3">
                                        {% for category in book.category %}
                                            <a href="{{ path('category_show', { 'id': category.id }) }}" class=" btn btn-outline-dark" title="{{ category.name }}">{{ category.name }}</a>
                                        {% endfor %}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>



<script>
document.addEventListener('DOMContentLoaded', function() {
    const likeButton = document.querySelector('[data-book-id="{{ book.id }}"]');
    const likesCountSpan = document.getElementById('likes-count');

    likeButton.addEventListener('click', function () {
        const bookId = this.getAttribute('data-book-id');
        fetch(`/book/${bookId}/like`, {
            method: 'POST',
            headers: {
                'X-Requested-With': 'XMLHttpRequest',
                'Content-Type': 'application/json'
            }
        })
        .then(response => {
            if (!response.ok) {
                return response.json().then(data => {
                // Affiche le message d'erreur dans l'élément HTML
                const errorMessage = document.getElementById('error-message');
                errorMessage.textContent = data.error;
                errorMessage.style.display = 'block';
            });
            }
            return response.json();
        })
        .then(data => {
            // Mettre à jour le nombre de likes
            likesCountSpan.textContent = data.likes;
        })
        .catch(error => console.error('Error:', error));
    });
});
</script>

{% endblock %}
